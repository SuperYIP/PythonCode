#coding=utf-8
'''
    在定义函数时，可以在形参前边加上一个*，这样这个形参将会获取到所有的实参，它将会将所有的实参保存到一个元组中
*a会接受所有的位置实参，并且会将这些实参统一保存到一个元组中（装包）
    **形参可以接收其他的关键字参数，它会将这些参数统一保存到一个字典中，字典的key就是参数的名字，字典的value就是参数的值
**形参只能有一个，并且必须写在所有参数的最后
*形参只能接收位置参数，而不能接收关键字参数
'''

# ---带星号的形参只能有一个---
# 带星号的参数，可以和其他参数配合使用
# 第一个参数给a，第二个参数给b，剩下的都保存到c的元组中

# def fn(*a):
#     print("a =",a,type(a))
# fn(1,2,3)
#
# def fn2(a,b,*c):
#     print('a =',a)
#     print('b =',b)
#     print('c =',c)
# fn2(1,2,3,4,5)

# 可变参数不是必须写在最后，但是注意，---带*的参数后的所有参数，必须以关键字参数的形式传递---
# 第一个参数给a，剩下的位置参数给b的元组，c必须使用关键字参数
# def fn2(a,*b,c):
#     print('a =',a)
#     print('b =',b)
#     print('c =',c)
# fn2(1,2,3,4,c=3)

# **形参可以接收其他的关键字参数，它会将这些参数统一保存到一个---字典---中
#   字典的key就是参数的名字，字典的value就是参数的值
# **形参只能有一个，并且---必须写在所有参数的最后---
# def fn3(b, c, **a):
#     print('a =', a, type(a))
#     print('b =', b)
#     print('c =', c)
#
# fn3(b=1,d=2,c=3,e=10,f=20)


# # 参数的解包（拆包）
# def fn4(a, b, c):
#     print('a =', a)
#     print('b =', b)
#     print('c =', c)
# # 传递实参时，也可以在序列类型的参数前添加星号，这样他会自动将序列中的元素依次作为参数传递
# # 这里要求序列中元素的个数必须和形参的个数的一致
# t = (10, 20, 30)
# fn4(*t)
# d = {'a':100,'b':200,'c':300}
# fn4(**d)    # 通过 **来对一个字典进行解包操作